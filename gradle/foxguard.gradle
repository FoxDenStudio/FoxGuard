buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven {
            name = 'gradle-plugins'
            url = 'https://plugins.gradle.org/m2'
        }
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
        classpath 'gradle.plugin.org.spongepowered:spongegradle:0.8.1'
        classpath 'org.spongepowered:event-impl-gen:5.4.0'
    }
}

//apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.spongepowered.plugin'

publishing{
    publications {
        library(MavenPublication) {
            artifactId = archivesBaseName
            version = repoVersion

            artifact jar{
                classifier ''
            }
            artifact sourceJar {
                classifier 'sources'
            }
        }
        download(MavenPublication) {
            artifactId = archivesBaseName

            artifact serverJar {
                classifier 'server'
            }
        }
    }
}

if(System.env.TRAVIS && !Boolean.valueOf(System.env.TRAVIS_PULL_REQUEST)){
    if(System.env.TRAVIS_TAG){
        travisPublish.dependsOn ':publishLibraryPublicationToFDSReleasesRepository'
    } else {
        travisPublish.dependsOn ':publishLibraryPublicationToFDSSnapshotsRepository'
    }
    travisPublish.dependsOn ':publishDownloadPublicationToFDSDownloadsRepository'
}

apply plugin: 'org.spongepowered.event-impl-gen'

// Compile time code generator for the event factory
genEventImpl {
    outputFactory = 'net.foxdenstudio.sponge.foxguard.plugin.event.factory.FGEventFactory'
    include 'net/foxdenstudio/sponge/foxguard/plugin/event/'
}

task serverJar(type: Jar) {
    group = 'build'
    classifier = 'server'
    from sourceSets.main.output
    from tasks.genEventImpl
}

artifacts {
    archives serverJar
}
